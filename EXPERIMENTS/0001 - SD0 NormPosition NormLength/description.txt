Data rozpoczecia: 22 listopada 2014

Cele:
 * Sprawdzenie tezy o zaburzeniu wcześniejszych wyników przez zbyt duże zaszumienie.
 * Porównanie klasycznego DE/rand/1/bin z modyfikacją zawierającą archiwum.
 * Sprawdzenie jaki wpływ na działanie algorytmu ma zmiana wielkości archiwum na procentowy udział w ilości populacji (zaczący procent).

Opis:
We wcześniejszych eksperymentach wykorzystywano odchylenie standardowe o wartości 0.33 (sd=.33). 
Efektem tego mogło być sprowadzenie algorytmu ewolucji różnicowej po zejściu do wektorów różnicowych wielkości rzędu 0.1 do klasycznego algorytmu ewolucyjnego.
Efekt ten mógł doprowadzić do zaburzenia wyników badań i uniemożliwiać porównanie algorytmu zmodyfikowanego z klasycznym DE/rand/1/bin.
Ten eksperyment powtarza wcześniejsze obliczenia przy wyłączonym całkowicie zaszumieniu (sd=0) w celu lepszego zbadania różnic między badanymi algorytmami.

Planowane eksperymenty:
W seriach po 25, dla tych samych osobników początkowych (lub w przypadku zmniejszenia ilości tych osobników - ich podzbioru).
Hfactor = { 1, 2, 10, 10% }
Liczebność populacji = 10 * liczba wymiarów, (10 * liczba wymiarów)/Hfactor oraz dla porównania z tym analogiczne ilości osobników przy Hfactor=1
Limit ilości obliczeń funkcji celu = 10 000 * liczba wymiarów.
SD = 0.0
Crossover = BIN
Cr = 0.9
F = 0.9
Init = RAND + ReUse
Dopasowanie do zakresu przeszukiwań - odbicie lustrzane

Testy prowadzono na następujących funkcjach z CEC2013: { f1, f2, f9, f10 }

Dane wyjściowe:
 - Wyniki poszczególnych wykonań algorytmów.
 - Dane zbiorcze w postaci serii BEST_SERIES i BEST_MID_SERIES dla wszystkich kombinacji algorytmów.
    * BEST_SERIES - najlepsza wartość funkcji przystosowania osobnika pojawiająca się w czasie wykonywania algorymtu.
    * BEST_MID_SERIES - najlepsza wartość punktu środkowego populacji pojawiająca się w czasie wykonywania algorymtu.

Plan analizy:
Na seriach danych wykonywany będzie test wilcoxona dla par (jako że poszczególne wykonani algorytmu inicjializowane są takimi samymi osobnikami).
Testy zestawione będą w następujących parach (za każdym razem zestawione osobno BEST_SERIES z BEST_SERIES i BEST_MID_SERIES z BEST_MID_SERIES):
 * Hfactor = 1, liczebność populacji = 10 * liczba wymiarów  VS  Hfactor = { 2, 10, 10% }, liczebność populacji = 10 * liczba wymiarów
 * Hfactor = 1, liczenbość populacji = 10 * liczba wymiarów  VS  Hfactor = { 2, 10 }, liczebność populacji = (10 * liczba wymiarów) / Hfactor 
 * Hfactor = 1, liczebność populacji = 5 * liczba wymiarów VS Hfactor = 2, liczebność populacji = 5 * liczba wymiarów
 * Hfactor = 1, liczebność populacji = liczba wymiarów VS Hfactor = 10, liczebność populacji = liczba wymiarów

